#Introduction Page.

= diStorm3 =
Featrues- no more string parsings :)

diStorm is a binary stream disassembler. It's capable of disassembling 80x86 instructions in 64 bits (AMD64, X86-64) and both in 16 and 32 bits. In addition, it disassembles FPU, MMX, SSE, SSE2, SSE3, SSSE3, SSE4, 3DNow! (w/ extensions), new x86-64 instruction sets, VMX, AMD's SVM and AVX! diStorm was written to decode quickly every instruction as accurately as possible. Robust decoding, while taking special care for valid or unused prefixes, is what makes this disassembler powerful, especially for research. The output of diStorm is a special structure that can describe any x86 instruction, this structure can be later formatted into text for display.

diStorm is written in C, but for rapidly use, diStorm also has wrappers in Python/Ruby and can easily be used in C as well.
The source code is portable and platform independent (supports both little and big endianity).
diStorm solely depends on the C library, therefore it can be used in embedded or kernel modules.

== Table Of Contents ==
 * Python Sample
 * C Code Sample Link
 * Structure Layout
 * Showcases
 * Advanced Features
 * Compilation
 * Documentation
 * Related Projects
 * Mailing List
 * Links